{#
  Args:
    resource_dict: a dictionary mapping a resource name to a resource
    this: `this`
    training_guide_this: the `this` to use for resolving training guides. defaults to `this`
#}
{% macro resource_list(resource_dict, this, training_guide_this) %}
  {% set training_guide_this = training_guide_this or this %}
  <div class="js-filter-dropdowns d-flex justify-content-end gap-10px">
    <div class="dropdown">
      <button class="btn btn-md btn-outline-primary dropdown-toggle font-weight-600" type="button" id="topicDropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        {% if this.current_topic %}
          {{ _('Topic:') + ' ' + this.current_topic }}
        {% else %}
          {{ _('Topic') }}
        {% endif %}
      </button>
      <div class="dropdown-menu" aria-labelledby="topicDropdownMenuButton">
        {% for topic in get_resource_topics() %}
          <a
            onclick="setTopic(event)"
            class="d-block"
            data-topic="{{ slugify(topic) }}"
            href="{{ get_new_link(this, new_topic=slugify(topic)) }}"
          >
            {{ topic }}
          </a>
        {% endfor %}
      </div>
    </div>
    <div class="dropdown">
      <button class="btn btn-md btn-outline-primary dropdown-toggle font-weight-600" type="button" id="languageDropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        {% if this.current_lang %}
          {{ _('Language:') +  ' ' + this.current_lang }}
        {% else %}
          {{ _('Language') }}
        {% endif %}
      </button>
      <div class="dropdown-menu" aria-labelledby="languageDropdownMenuButton">
        {% for language_code, language_name in get_resource_langs() %}
          <a
            onclick="setLang(event)"
            class="d-block"
            data-lang="{{ language_code }}"
            href="{{ get_new_link(this, new_lang=language_code) }}"
          >
            {{ language_name }}
          </a>
        {% endfor %}
      </div>
    </div>
    <div class="dropdown">
      <button class="btn btn-md btn-outline-primary dropdown-toggle font-weight-600" type="button" id="authorDropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        {% if this.current_author %}
          {{ _('Maintained by:')  + ' ' + this.current_author }}
        {% else %}
          {{ _('Maintained by')}}
        {% endif %}
      </button>
      <div class="dropdown-menu" aria-labelledby="authorDropdownMenuButton">
        {% for author in get_authors() %}
          <a
            onclick="setAuthor(event)"
            class="d-block"
            data-author="{{ slugify(author) }}"
            href="{{ get_new_link(this, new_author=author) }}"
          >
            {{ author }}
          </a>
        {% endfor %}
      </div>
    </div>
    <button class="btn btn-md btn-primary font-weight-600 d-none filterApplyButton" type="button">
      {{ _('Apply filters') }}
    </button>
  </div>
  <div id="resource-list">
    {% if not resource_dict %}
      {# TODO: change this placeholder text #}
      <h1>We couldn't find any resources that fit those criteria :(</h1>
    {% endif %}
    {% for resource_name, resource in resource_dict.items() %}
      <div
        class="border container-fluid p-3 px-0 my-3 resource-list-entry"
        data-topics=":{% for topic in resource['topics']%}{{ slugify(topic) }}:{% endfor %}"
        data-langs=":{% for lang in resource['languages']%}{{ lang }}:{% endfor %}"
        data-author="{{ slugify(resource['author']) }}"
      >
        {# couldn't get the desktop and mobile layouts to coexist, so each card has two layouts at different breakpoints #}
        {# this is the desktop layout, at `large` breakpoint #}
        <div class="row d-none d-lg-flex">
          <a href="{{ resource['link']|url }}" class="d-block col-sm-3">
            <img src="{{ resource['cover']|url }}" class="img-fluid" alt="{{ resource['name'] }}">
          </a>
          <div class="col-sm pl-lg-1">
            <div class="row">
              <div class="col-sm row">
                <h3 class="col-sm card-title font-weight-600 m-0 pr-0" style="max-width: fit-content">{{ resource['name'] }}</h3>
                <div class="row gap-10px pl-3 m-0">
                  <div>
                    <a href="{{ resource['link']|url }}" title="{{ resource['name'] }}" class="btn btn-primary font-weight-600">{{ _('View') }}</a>
                  </div>
                  <div>
                    {% set training_guide = site.get(training_guide_this._path + '/' + resource_name + '-guide') %}
                    {% if training_guide %}
                      <a href="{{ training_guide|url }}" title="{{ resource['name'] }}" class="btn btn-outline-primary font-weight-600">{{ _("Trainer's guide") }}</a>
                    {% endif %}
                  </div>
                </div>
              <div class="col-sm-6"></div>
              </div>
              <div class="d-none d-md-inline col-sm-auto text-right">
                <span class="text-muted font-weight-600 font-size-18-px">{{ _('Updated: {}').format(resource['date']) }}</span>
              </div>
            </div>
            <div class="row">
              <span class="text-primary font-weight-600 my-2 font-size-18-px col">{{ _('By {}').format(resource['author']) }}</span>
            </div>
            <div class="row">
              <span class="m-0 font-size-18-px flex-grow-1 col">{{ resource['description'] }}</span>
            </div>
            <div class="row">
              <span class="text-muted font-weight-600 m-0 font-size-18-px col">{{ _('Available in: {}').format(resource['languages'].values()|join(', ')) }}</span>
            </div>
          </div>
        </div>
        {# end of desktop layout #}
        {# mobile layout #}
        <div class="col d-lg-none px-0">
          <a href="{{ resource['link']|url }}" class="d-block pb-4">
            <img src="{{ resource['cover']|url }}" class="img-fluid" alt="{{ resource['name'] }}">
          </a>
          <div class="col-sm pl-lg-1">
            <div class="row">
              <div class="col-sm row">
                <h3 class="card-title font-weight-600 m-0 pr-0" style="max-width: fit-content">{{ resource['name'] }}</h3>
                <div class="row gap-10px pl-3 m-0">
                  <div>
                    <a href="{{ resource['link']|url }}" title="{{ resource['name'] }}" class="btn btn-primary font-weight-600">{{ _('View') }}</a>
                  </div>
                </div>
              <div class="col-sm-6"></div>
              </div>
              <div class="d-none d-md-inline col-sm-auto text-right">
                <span class="text-muted font-weight-600 font-size-18-px">{{ _('Updated: {}').format(resource['date']) }}</span>
              </div>
            </div>
            <div class="row">
              <span class="text-primary font-weight-600 my-2 font-size-18-px">{{ _('By {}').format(resource['author']) }}</span>
            </div>
            <div class="row">
              <span class="m-0 font-size-18-px flex-grow-1">{{ resource['description'] }}</span>
            </div>
            <div class="row">
              <span class="text-muted font-weight-600 m-0 font-size-18-px mt-2">{{ _('Available in: {}').format(resource['languages']|join(', ')) }}</span>
            </div>
            <div class="row">
              <div>
                {% set training_guide = site.get(this._path + '/' + resource_name + '-guide') %}
                {% if training_guide %}
                  <a href="{{ training_guide|url }}" title="{{ resource['name'] }}" class="btn btn-outline-primary font-weight-600 mt-2">{{ _("Trainer's guide") }}</a>
                {% endif %}
              </div>
            </div>
          </div>
        </div>
        {# end of mobile layout #}
      </div>
  	{% endfor %}
  </div>
  <script>
    'use strict';

    window.resourceFilters = {
      topic: null,
      lang: null,
      author: null,
    };

    let resources = document.querySelectorAll('#resource-list > .resource-list-entry');
    let topic_dropdown_button = document.getElementById('topicDropdownMenuButton');
    let lang_dropdown_button = document.getElementById('languageDropdownMenuButton');
    let author_dropdown_button = document.getElementById('authorDropdownMenuButton');

    // TODO: set the topic/lang/author dropdown labels
    function setTopic(ev) {
      ev.preventDefault();

      let topic = ev.target.dataset.topic;
      let topicReadable = ev.target.innerText;
      let newText = `{{ _('Topic:') }} ${topicReadable}`;

      if (topic === 'none') { 
        topic = null;
        newText = `{{ _('Topic') }}`;
      }

      topic_dropdown_button.innerText = newText;
      window.resourceFilters.topic = topic;
    }

    function setLang(ev) {
      ev.preventDefault();

      let lang = ev.target.dataset.lang;
      let langReadable = ev.target.innerText;
      let newText = `{{ _('Language:') }} ${langReadable}`;

      if (lang === 'none') {
        lang = null;
        newText = `{{ _('Language') }}`;
      }

      lang_dropdown_button.innerText = newText;
      window.resourceFilters.lang = lang;
    }

    function setAuthor(ev) {
      ev.preventDefault();

      let author = ev.target.dataset.author;
      let authorReadable = ev.target.innerText;
      let newText = `{{ _('Author:') }} ${authorReadable}`;

      if (author === 'none') {
        author = null;
        newText = `{{ _('Author') }}`;
      }

      window.resourceFilters.author = author;
      author_dropdown_button.innerText = newText;
    }

    // TODO: actually filter properly
    function applyFilters(topic, lang, author) {
      const hide = element => element.classList.add('d-none');
      const unhide = element => element.classList.remove('d-none');

      resources.forEach(resource => {
        let hidden = false;
        if (topic && !resource.dataset.topics.includes(`:${topic}:`)) {
          hide(resource);
        } else if (lang && !resource.dataset.langs.includes(`:${lang}:`)) {
          hide(resource);
        } else if (author && resource.dataset.author != author) {
          hide(resource);
        } else {
          unhide(resource);
        }
      });
    }

    document.querySelectorAll('.filterApplyButton').forEach(button => {
      button.classList.remove('d-none');
      button.addEventListener('click', ev => {
        applyFilters(window.resourceFilters.topic, window.resourceFilters.lang, window.resourceFilters.author);
      });
    });
    </script>
{% endmacro %}
